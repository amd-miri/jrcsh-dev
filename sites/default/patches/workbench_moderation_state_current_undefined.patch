diff --git a/workbench_moderation.rules.inc b/workbench_moderation.rules.inc
index 31dcdc5..f9ddbd1 100644
--- a/workbench_moderation.rules.inc
+++ b/workbench_moderation.rules.inc
@@ -197,6 +197,30 @@ function workbench_moderation_rules_action_info() {
     ),
   );
 
+  $items['workbench_moderation_set_state_and_unpublish'] = array(
+    'label' => t("Set moderation state and unpublish"),
+    'group' => t("Node"),
+    'base' => 'workbench_moderation_set_state_and_unpublish_rules_action',
+
+    'parameter' => array(
+      'node' => array(
+        'type' => 'node',
+        'label' => t("Content"),
+      ),
+      'moderation_state' => array(
+        'type' => 'text',
+        'label' => t("Workbench moderation state"),
+        'options list' => 'workbench_moderation_state_labels',
+        'restriction' => 'input',
+      ),
+      'force_transition' => array(
+        'type' => 'boolean',
+        'label' => t("Force transition"),
+        'restriction' => 'input',
+      ),
+    ),
+  );
+
   return $items;
 }
 
@@ -255,7 +279,8 @@ function workbench_moderation_rules_condition_contents_current_state($node, $mod
     return FALSE;
   }
 
-  $state = (!empty($node->workbench_moderation_state_new)) ? $node->workbench_moderation_state_new : $node->workbench_moderation_state_current;
+  $current_state = (!empty($node->workbench_moderation_state_current)) ? $node->workbench_moderation_state_current : '';
+  $state = (!empty($node->workbench_moderation_state_new)) ? $node->workbench_moderation_state_new : $current_state;
 
   if ($state != $moderation_state) {
     return FALSE;
@@ -358,6 +383,42 @@ function workbench_moderation_load_current_state_rules_action($node) {
   return array('node' => $node, 'workbench_moderation_state' => $state);
 }
 
+/**
+ * Action: Sets the moderation state and unpublishes the current node revision
+ *
+ * $param $node
+ *   A node object
+ *
+ * @return
+ *   An array containing the node in the key 'node'.
+ */
+function workbench_moderation_set_state_and_unpublish_rules_action($node, $moderation_state, $force_transition) {
+  // Do nothing if no node or moderation state is missing
+  if (!is_object($node) || empty($moderation_state)) {
+    return array('node' => $node);
+  }
+
+  // Remove the moderation record's "published" flag.
+  $query = db_update('workbench_moderation_node_history')
+    ->condition('hid', $node->workbench_moderation['published']->hid)
+    ->fields(array('published' => 0))
+    ->execute();
+
+  // Set the moderation state
+  workbench_moderation_set_state_action($node, array('state' => $moderation_state, 'force_transition' => $force_transition));
+
+  // Make sure the 'current' revision is the 'live' revision -- ie, the revision
+  // in {node}.
+  $live_revision = workbench_moderation_node_current_load($node);
+  $live_revision->status = 0;
+  $live_revision->revision = 0;
+  $live_revision->workbench_moderation['updating_live_revision'] = TRUE;
+  // @TODO: do we trust node_save() here?
+  node_save($live_revision);
+
+  return array('node' => $node);
+}
+
 /**
  * Action: Loads the current node revision.
  *
